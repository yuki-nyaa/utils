#pragma once
#include<yuki/unicode_base.hpp>

namespace yuki::unicode{

inline constexpr yuki::CInterval<char32_t> Zyyy[173]={
    {0x0,U'@'},{U'[',U'`'},{U'{',0xA9},{0xAB,0xB9},{0xBB,0xBF},{0xD7,0xD7},{0xF7,0xF7},{0x2B9,0x2DF},
    {0x2E5,0x2E9},{0x2EC,0x2FF},{0x374,0x374},{0x37E,0x37E},{0x385,0x385},{0x387,0x387},{0x605,0x605},{0x60C,0x60C},
    {0x61B,0x61B},{0x61F,0x61F},{0x640,0x640},{0x6DD,0x6DD},{0x8E2,0x8E2},{0x964,0x965},{0xE3F,0xE3F},{0xFD5,0xFD8},
    {0x10FB,0x10FB},{0x16EB,0x16ED},{0x1735,0x1736},{0x1802,0x1803},{0x1805,0x1805},{0x1CD3,0x1CD3},{0x1CE1,0x1CE1},{0x1CE9,0x1CEC},
    {0x1CEE,0x1CF3},{0x1CF5,0x1CF7},{0x1CFA,0x1CFA},{0x2000,0x200B},{0x200E,0x2064},{0x2066,0x2070},{0x2074,0x207E},{0x2080,0x208E},
    {0x20A0,0x20C0},{0x2100,0x2125},{0x2127,0x2129},{0x212C,0x2131},{0x2133,0x214D},{0x214F,0x215F},{0x2189,0x218B},{0x2190,0x2426},
    {0x2440,0x244A},{0x2460,0x27FF},{0x2900,0x2B73},{0x2B76,0x2B95},{0x2B97,0x2BFF},{0x2E00,0x2E5D},{0x2FF0,0x2FFB},{0x3000,0x3004},
    {0x3006,0x3006},{0x3008,0x3020},{0x3030,0x3037},{0x303C,0x303F},{0x309B,0x309C},{0x30A0,0x30A0},{0x30FB,0x30FC},{0x3190,0x319F},
    {0x31C0,0x31E3},{0x3220,0x325F},{0x327F,0x32CF},{0x32FF,0x32FF},{0x3358,0x33FF},{0x4DC0,0x4DFF},{0xA700,0xA721},{0xA788,0xA78A},
    {0xA830,0xA839},{0xA92E,0xA92E},{0xA9CF,0xA9CF},{0xAB5B,0xAB5B},{0xAB6A,0xAB6B},{0xFD3E,0xFD3F},{0xFE10,0xFE19},{0xFE30,0xFE52},
    {0xFE54,0xFE66},{0xFE68,0xFE6B},{0xFEFF,0xFEFF},{0xFF01,0xFF20},{0xFF3B,0xFF40},{0xFF5B,0xFF65},{0xFF70,0xFF70},{0xFF9E,0xFF9F},
    {0xFFE0,0xFFE6},{0xFFE8,0xFFEE},{0xFFF9,0xFFFD},{0x10100,0x10102},{0x10107,0x10133},{0x10137,0x1013F},{0x10190,0x1019C},{0x101D0,0x101FC},
    {0x102E1,0x102FB},{0x1BCA0,0x1BCA3},{0x1CF50,0x1CFC3},{0x1D000,0x1D0F5},{0x1D100,0x1D126},{0x1D129,0x1D166},{0x1D16A,0x1D17A},{0x1D183,0x1D184},
    {0x1D18C,0x1D1A9},{0x1D1AE,0x1D1EA},{0x1D2C0,0x1D2D3},{0x1D2E0,0x1D2F3},{0x1D300,0x1D356},{0x1D360,0x1D378},{0x1D400,0x1D454},{0x1D456,0x1D49C},
    {0x1D49E,0x1D49F},{0x1D4A2,0x1D4A2},{0x1D4A5,0x1D4A6},{0x1D4A9,0x1D4AC},{0x1D4AE,0x1D4B9},{0x1D4BB,0x1D4BB},{0x1D4BD,0x1D4C3},{0x1D4C5,0x1D505},
    {0x1D507,0x1D50A},{0x1D50D,0x1D514},{0x1D516,0x1D51C},{0x1D51E,0x1D539},{0x1D53B,0x1D53E},{0x1D540,0x1D544},{0x1D546,0x1D546},{0x1D54A,0x1D550},
    {0x1D552,0x1D6A5},{0x1D6A8,0x1D7CB},{0x1D7CE,0x1D7FF},{0x1EC71,0x1ECB4},{0x1ED01,0x1ED3D},{0x1F000,0x1F02B},{0x1F030,0x1F093},{0x1F0A0,0x1F0AE},
    {0x1F0B1,0x1F0BF},{0x1F0C1,0x1F0CF},{0x1F0D1,0x1F0F5},{0x1F100,0x1F1AD},{0x1F1E6,0x1F1FF},{0x1F201,0x1F202},{0x1F210,0x1F23B},{0x1F240,0x1F248},
    {0x1F250,0x1F251},{0x1F260,0x1F265},{0x1F300,0x1F6D7},{0x1F6DC,0x1F6EC},{0x1F6F0,0x1F6FC},{0x1F700,0x1F776},{0x1F77B,0x1F7D9},{0x1F7E0,0x1F7EB},
    {0x1F7F0,0x1F7F0},{0x1F800,0x1F80B},{0x1F810,0x1F847},{0x1F850,0x1F859},{0x1F860,0x1F887},{0x1F890,0x1F8AD},{0x1F8B0,0x1F8B1},{0x1F900,0x1FA53},
    {0x1FA60,0x1FA6D},{0x1FA70,0x1FA7C},{0x1FA80,0x1FA88},{0x1FA90,0x1FABD},{0x1FABF,0x1FAC5},{0x1FACE,0x1FADB},{0x1FAE0,0x1FAE8},{0x1FAF0,0x1FAF8},
    {0x1FB00,0x1FB92},{0x1FB94,0x1FBCA},{0x1FBF0,0x1FBF9},{0xE0001,0xE0001},{0xE0020,0xE007F},
};
inline constexpr size_t Zyyy_total=8301;


inline constexpr yuki::CInterval<char32_t> Latn[47]={
    {U'A',U'Z'},{U'a',U'z'},{0xAA,0xAA},{0xBA,0xBA},{0xC0,0xD6},{0xD8,0xF6},{0xF8,0x2B8},{0x2E0,0x2E4},
    {0x363,0x36F},{0x485,0x486},{0x951,0x952},{0x10FB,0x10FB},{0x1D00,0x1D25},{0x1D2C,0x1D5C},{0x1D62,0x1D65},{0x1D6B,0x1D77},
    {0x1D79,0x1DBE},{0x1E00,0x1EFF},{0x202F,0x202F},{0x2071,0x2071},{0x207F,0x207F},{0x2090,0x209C},{0x20F0,0x20F0},{0x212A,0x212B},
    {0x2132,0x2132},{0x214E,0x214E},{0x2160,0x2188},{0x2C60,0x2C7F},{0xA700,0xA707},{0xA722,0xA787},{0xA78B,0xA7CA},{0xA7D0,0xA7D1},
    {0xA7D3,0xA7D3},{0xA7D5,0xA7D9},{0xA7F2,0xA7FF},{0xA92E,0xA92E},{0xAB30,0xAB5A},{0xAB5C,0xAB64},{0xAB66,0xAB69},{0xFB00,0xFB06},
    {0xFF21,0xFF3A},{0xFF41,0xFF5A},{0x10780,0x10785},{0x10787,0x107B0},{0x107B2,0x107BA},{0x1DF00,0x1DF1E},{0x1DF25,0x1DF2A},
};
inline constexpr size_t Latn_total=1510;


inline constexpr yuki::CInterval<char32_t> Grek[38]={
    {0x342,0x342},{0x345,0x345},{0x370,0x373},{0x375,0x377},{0x37A,0x37D},{0x37F,0x37F},{0x384,0x384},{0x386,0x386},
    {0x388,0x38A},{0x38C,0x38C},{0x38E,0x3A1},{0x3A3,0x3E1},{0x3F0,0x3FF},{0x1D26,0x1D2A},{0x1D5D,0x1D61},{0x1D66,0x1D6A},
    {0x1DBF,0x1DC1},{0x1F00,0x1F15},{0x1F18,0x1F1D},{0x1F20,0x1F45},{0x1F48,0x1F4D},{0x1F50,0x1F57},{0x1F59,0x1F59},{0x1F5B,0x1F5B},
    {0x1F5D,0x1F5D},{0x1F5F,0x1F7D},{0x1F80,0x1FB4},{0x1FB6,0x1FC4},{0x1FC6,0x1FD3},{0x1FD6,0x1FDB},{0x1FDD,0x1FEF},{0x1FF2,0x1FF4},
    {0x1FF6,0x1FFE},{0x2126,0x2126},{0xAB65,0xAB65},{0x10140,0x1018E},{0x101A0,0x101A0},{0x1D200,0x1D245},
};
inline constexpr size_t Grek_total=522;


inline constexpr yuki::CInterval<char32_t> Cyrl[11]={
    {0x400,0x52F},{0x1C80,0x1C88},{0x1D2B,0x1D2B},{0x1D78,0x1D78},{0x1DF8,0x1DF8},{0x2DE0,0x2DFF},{0x2E43,0x2E43},{0xA640,0xA69F},
    {0xFE2E,0xFE2F},{0x1E030,0x1E06D},{0x1E08F,0x1E08F},
};
inline constexpr size_t Cyrl_total=514;


inline constexpr yuki::CInterval<char32_t> Armn[4]={
    {0x531,0x556},{0x559,0x58A},{0x58D,0x58F},{0xFB13,0xFB17},
};
inline constexpr size_t Armn_total=96;


inline constexpr yuki::CInterval<char32_t> Hebr[9]={
    {0x591,0x5C7},{0x5D0,0x5EA},{0x5EF,0x5F4},{0xFB1D,0xFB36},{0xFB38,0xFB3C},{0xFB3E,0xFB3E},{0xFB40,0xFB41},{0xFB43,0xFB44},
    {0xFB46,0xFB4F},
};
inline constexpr size_t Hebr_total=134;


inline constexpr yuki::CInterval<char32_t> Arab[52]={
    {0x600,0x604},{0x606,0x6DC},{0x6DE,0x6FF},{0x750,0x77F},{0x870,0x88E},{0x890,0x891},{0x898,0x8E1},{0x8E3,0x8FF},
    {0xFB50,0xFBC2},{0xFBD3,0xFD8F},{0xFD92,0xFDC7},{0xFDCF,0xFDCF},{0xFDF0,0xFDFF},{0xFE70,0xFE74},{0xFE76,0xFEFC},{0x102E0,0x102FB},
    {0x10E60,0x10E7E},{0x10EFD,0x10EFF},{0x1EE00,0x1EE03},{0x1EE05,0x1EE1F},{0x1EE21,0x1EE22},{0x1EE24,0x1EE24},{0x1EE27,0x1EE27},{0x1EE29,0x1EE32},
    {0x1EE34,0x1EE37},{0x1EE39,0x1EE39},{0x1EE3B,0x1EE3B},{0x1EE42,0x1EE42},{0x1EE47,0x1EE47},{0x1EE49,0x1EE49},{0x1EE4B,0x1EE4B},{0x1EE4D,0x1EE4F},
    {0x1EE51,0x1EE52},{0x1EE54,0x1EE54},{0x1EE57,0x1EE57},{0x1EE59,0x1EE59},{0x1EE5B,0x1EE5B},{0x1EE5D,0x1EE5D},{0x1EE5F,0x1EE5F},{0x1EE61,0x1EE62},
    {0x1EE64,0x1EE64},{0x1EE67,0x1EE6A},{0x1EE6C,0x1EE72},{0x1EE74,0x1EE77},{0x1EE79,0x1EE7C},{0x1EE7E,0x1EE7E},{0x1EE80,0x1EE89},{0x1EE8B,0x1EE9B},
    {0x1EEA1,0x1EEA3},{0x1EEA5,0x1EEA9},{0x1EEAB,0x1EEBB},{0x1EEF0,0x1EEF1},
};
inline constexpr size_t Arab_total=1428;


inline constexpr yuki::CInterval<char32_t> Syrc[12]={
    {0x60C,0x60C},{0x61B,0x61C},{0x61F,0x61F},{0x640,0x640},{0x64B,0x655},{0x670,0x670},{0x700,0x70D},{0x70F,0x74A},
    {0x74D,0x74F},{0x860,0x86A},{0x1DF8,0x1DF8},{0x1DFA,0x1DFA},
};
inline constexpr size_t Syrc_total=107;


inline constexpr yuki::CInterval<char32_t> Thaa[7]={
    {0x60C,0x60C},{0x61B,0x61C},{0x61F,0x61F},{0x660,0x669},{0x780,0x7B1},{0xFDF2,0xFDF2},{0xFDFD,0xFDFD},
};
inline constexpr size_t Thaa_total=66;


inline constexpr yuki::CInterval<char32_t> Deva[8]={
    {0x900,0x952},{0x955,0x97F},{0x1CD0,0x1CF6},{0x1CF8,0x1CF9},{0x20F0,0x20F0},{0xA830,0xA839},{0xA8E0,0xA8FF},{0x11B00,0x11B09},
};
inline constexpr size_t Deva_total=232;


inline constexpr yuki::CInterval<char32_t> Beng[26]={
    {0x951,0x952},{0x964,0x965},{0x980,0x983},{0x985,0x98C},{0x98F,0x990},{0x993,0x9A8},{0x9AA,0x9B0},{0x9B2,0x9B2},
    {0x9B6,0x9B9},{0x9BC,0x9C4},{0x9C7,0x9C8},{0x9CB,0x9CE},{0x9D7,0x9D7},{0x9DC,0x9DD},{0x9DF,0x9E3},{0x9E6,0x9FE},
    {0x1CD0,0x1CD0},{0x1CD2,0x1CD2},{0x1CD5,0x1CD6},{0x1CD8,0x1CD8},{0x1CE1,0x1CE1},{0x1CEA,0x1CEA},{0x1CED,0x1CED},{0x1CF2,0x1CF2},
    {0x1CF5,0x1CF7},{0xA8F1,0xA8F1},
};
inline constexpr size_t Beng_total=123;


inline constexpr yuki::CInterval<char32_t> Guru[19]={
    {0x951,0x952},{0x964,0x965},{0xA01,0xA03},{0xA05,0xA0A},{0xA0F,0xA10},{0xA13,0xA28},{0xA2A,0xA30},{0xA32,0xA33},
    {0xA35,0xA36},{0xA38,0xA39},{0xA3C,0xA3C},{0xA3E,0xA42},{0xA47,0xA48},{0xA4B,0xA4D},{0xA51,0xA51},{0xA59,0xA5C},
    {0xA5E,0xA5E},{0xA66,0xA76},{0xA830,0xA839},
};
inline constexpr size_t Guru_total=104;


inline constexpr yuki::CInterval<char32_t> Gujr[17]={
    {0x951,0x952},{0x964,0x965},{0xA81,0xA83},{0xA85,0xA8D},{0xA8F,0xA91},{0xA93,0xAA8},{0xAAA,0xAB0},{0xAB2,0xAB3},
    {0xAB5,0xAB9},{0xABC,0xAC5},{0xAC7,0xAC9},{0xACB,0xACD},{0xAD0,0xAD0},{0xAE0,0xAE3},{0xAE6,0xAF1},{0xAF9,0xAFF},
    {0xA830,0xA839},
};
inline constexpr size_t Gujr_total=115;


inline constexpr yuki::CInterval<char32_t> Orya[18]={
    {0x951,0x952},{0x964,0x965},{0xB01,0xB03},{0xB05,0xB0C},{0xB0F,0xB10},{0xB13,0xB28},{0xB2A,0xB30},{0xB32,0xB33},
    {0xB35,0xB39},{0xB3C,0xB44},{0xB47,0xB48},{0xB4B,0xB4D},{0xB55,0xB57},{0xB5C,0xB5D},{0xB5F,0xB63},{0xB66,0xB77},
    {0x1CDA,0x1CDA},{0x1CF2,0x1CF2},
};
inline constexpr size_t Orya_total=97;


inline constexpr yuki::CInterval<char32_t> Taml[25]={
    {0x951,0x952},{0x964,0x965},{0xB82,0xB83},{0xB85,0xB8A},{0xB8E,0xB90},{0xB92,0xB95},{0xB99,0xB9A},{0xB9C,0xB9C},
    {0xB9E,0xB9F},{0xBA3,0xBA4},{0xBA8,0xBAA},{0xBAE,0xBB9},{0xBBE,0xBC2},{0xBC6,0xBC8},{0xBCA,0xBCD},{0xBD0,0xBD0},
    {0xBD7,0xBD7},{0xBE6,0xBFA},{0x1CDA,0x1CDA},{0xA8F3,0xA8F3},{0x11301,0x11301},{0x11303,0x11303},{0x1133B,0x1133C},{0x11FC0,0x11FF1},
    {0x11FFF,0x11FFF},
};
inline constexpr size_t Taml_total=150;


inline constexpr yuki::CInterval<char32_t> Telu[17]={
    {0x951,0x952},{0x964,0x965},{0xC00,0xC0C},{0xC0E,0xC10},{0xC12,0xC28},{0xC2A,0xC39},{0xC3C,0xC44},{0xC46,0xC48},
    {0xC4A,0xC4D},{0xC55,0xC56},{0xC58,0xC5A},{0xC5D,0xC5D},{0xC60,0xC63},{0xC66,0xC6F},{0xC77,0xC7F},{0x1CDA,0x1CDA},
    {0x1CF2,0x1CF2},
};
inline constexpr size_t Telu_total=106;


inline constexpr yuki::CInterval<char32_t> Knda[21]={
    {0x951,0x952},{0x964,0x965},{0xC80,0xC8C},{0xC8E,0xC90},{0xC92,0xCA8},{0xCAA,0xCB3},{0xCB5,0xCB9},{0xCBC,0xCC4},
    {0xCC6,0xCC8},{0xCCA,0xCCD},{0xCD5,0xCD6},{0xCDD,0xCDE},{0xCE0,0xCE3},{0xCE6,0xCEF},{0xCF1,0xCF3},{0x1CD0,0x1CD0},
    {0x1CD2,0x1CD2},{0x1CDA,0x1CDA},{0x1CF2,0x1CF2},{0x1CF4,0x1CF4},{0xA830,0xA835},
};
inline constexpr size_t Knda_total=116;


inline constexpr yuki::CInterval<char32_t> Mlym[11]={
    {0x951,0x952},{0x964,0x965},{0xD00,0xD0C},{0xD0E,0xD10},{0xD12,0xD44},{0xD46,0xD48},{0xD4A,0xD4F},{0xD54,0xD63},
    {0xD66,0xD7F},{0x1CDA,0x1CDA},{0xA830,0xA832},
};
inline constexpr size_t Mlym_total=126;


inline constexpr yuki::CInterval<char32_t> Sinh[14]={
    {0x964,0x965},{0xD81,0xD83},{0xD85,0xD96},{0xD9A,0xDB1},{0xDB3,0xDBB},{0xDBD,0xDBD},{0xDC0,0xDC6},{0xDCA,0xDCA},
    {0xDCF,0xDD4},{0xDD6,0xDD6},{0xDD8,0xDDF},{0xDE6,0xDEF},{0xDF2,0xDF4},{0x111E1,0x111F4},
};
inline constexpr size_t Sinh_total=113;


inline constexpr yuki::CInterval<char32_t> Thai_sc[2]={
    {0xE01,0xE3A},{0xE40,0xE5B},
};
inline constexpr size_t Thai_sc_total=86;


inline constexpr yuki::CInterval<char32_t> Laoo[11]={
    {0xE81,0xE82},{0xE84,0xE84},{0xE86,0xE8A},{0xE8C,0xEA3},{0xEA5,0xEA5},{0xEA7,0xEBD},{0xEC0,0xEC4},{0xEC6,0xEC6},
    {0xEC8,0xECE},{0xED0,0xED9},{0xEDC,0xEDF},
};
inline constexpr size_t Laoo_total=83;


inline constexpr yuki::CInterval<char32_t> Tibt[7]={
    {0xF00,0xF47},{0xF49,0xF6C},{0xF71,0xF97},{0xF99,0xFBC},{0xFBE,0xFCC},{0xFCE,0xFD4},{0xFD9,0xFDA},
};
inline constexpr size_t Tibt_total=207;


inline constexpr yuki::CInterval<char32_t> Mymr[4]={
    {0x1000,0x109F},{0xA92E,0xA92E},{0xA9E0,0xA9FE},{0xAA60,0xAA7F},
};
inline constexpr size_t Mymr_total=234;


inline constexpr yuki::CInterval<char32_t> Geor[9]={
    {0x10A0,0x10C5},{0x10C7,0x10C7},{0x10CD,0x10CD},{0x10D0,0x10FF},{0x1C90,0x1CBA},{0x1CBD,0x1CBF},{0x2D00,0x2D25},{0x2D27,0x2D27},
    {0x2D2D,0x2D2D},
};
inline constexpr size_t Geor_total=174;


inline constexpr yuki::CInterval<char32_t> Hang[21]={
    {0x1100,0x11FF},{0x3001,0x3003},{0x3008,0x3011},{0x3013,0x301F},{0x302E,0x3030},{0x3037,0x3037},{0x30FB,0x30FB},{0x3131,0x318E},
    {0x3200,0x321E},{0x3260,0x327E},{0xA960,0xA97C},{0xAC00,0xD7A3},{0xD7B0,0xD7C6},{0xD7CB,0xD7FB},{0xFE45,0xFE46},{0xFF61,0xFF65},
    {0xFFA0,0xFFBE},{0xFFC2,0xFFC7},{0xFFCA,0xFFCF},{0xFFD2,0xFFD7},{0xFFDA,0xFFDC},
};
inline constexpr size_t Hang_total=11775;


inline constexpr yuki::CInterval<char32_t> Ethi[36]={
    {0x1200,0x1248},{0x124A,0x124D},{0x1250,0x1256},{0x1258,0x1258},{0x125A,0x125D},{0x1260,0x1288},{0x128A,0x128D},{0x1290,0x12B0},
    {0x12B2,0x12B5},{0x12B8,0x12BE},{0x12C0,0x12C0},{0x12C2,0x12C5},{0x12C8,0x12D6},{0x12D8,0x1310},{0x1312,0x1315},{0x1318,0x135A},
    {0x135D,0x137C},{0x1380,0x1399},{0x2D80,0x2D96},{0x2DA0,0x2DA6},{0x2DA8,0x2DAE},{0x2DB0,0x2DB6},{0x2DB8,0x2DBE},{0x2DC0,0x2DC6},
    {0x2DC8,0x2DCE},{0x2DD0,0x2DD6},{0x2DD8,0x2DDE},{0xAB01,0xAB06},{0xAB09,0xAB0E},{0xAB11,0xAB16},{0xAB20,0xAB26},{0xAB28,0xAB2E},
    {0x1E7E0,0x1E7E6},{0x1E7E8,0x1E7EB},{0x1E7ED,0x1E7EE},{0x1E7F0,0x1E7FE},
};
inline constexpr size_t Ethi_total=523;


inline constexpr yuki::CInterval<char32_t> Cher[3]={
    {0x13A0,0x13F5},{0x13F8,0x13FD},{0xAB70,0xABBF},
};
inline constexpr size_t Cher_total=172;


inline constexpr yuki::CInterval<char32_t> Cans[3]={
    {0x1400,0x167F},{0x18B0,0x18F5},{0x11AB0,0x11ABF},
};
inline constexpr size_t Cans_total=726;


inline constexpr yuki::CInterval<char32_t> Ogam[1]={
    {0x1680,0x169C},
};
inline constexpr size_t Ogam_total=29;


inline constexpr yuki::CInterval<char32_t> Runr[2]={
    {0x16A0,0x16EA},{0x16EE,0x16F8},
};
inline constexpr size_t Runr_total=86;


inline constexpr yuki::CInterval<char32_t> Khmr[4]={
    {0x1780,0x17DD},{0x17E0,0x17E9},{0x17F0,0x17F9},{0x19E0,0x19FF},
};
inline constexpr size_t Khmr_total=146;


inline constexpr yuki::CInterval<char32_t> Mong[5]={
    {0x1800,0x1819},{0x1820,0x1878},{0x1880,0x18AA},{0x202F,0x202F},{0x11660,0x1166C},
};
inline constexpr size_t Mong_total=172;


inline constexpr yuki::CInterval<char32_t> Hira[17]={
    {0x3001,0x3003},{0x3008,0x3011},{0x3013,0x301F},{0x3030,0x3035},{0x3037,0x3037},{0x303C,0x303D},{0x3041,0x3096},{0x3099,0x30A0},
    {0x30FB,0x30FC},{0xFE45,0xFE46},{0xFF61,0xFF65},{0xFF70,0xFF70},{0xFF9E,0xFF9F},{0x1B001,0x1B11F},{0x1B132,0x1B132},{0x1B150,0x1B152},
    {0x1F200,0x1F200},
};
inline constexpr size_t Hira_total=433;


inline constexpr yuki::CInterval<char32_t> Kana[20]={
    {0x3001,0x3003},{0x3008,0x3011},{0x3013,0x301F},{0x3030,0x3035},{0x3037,0x3037},{0x303C,0x303D},{0x3099,0x309C},{0x30A0,0x30FF},
    {0x31F0,0x31FF},{0x32D0,0x32FE},{0x3300,0x3357},{0xFE45,0xFE46},{0xFF61,0xFF9F},{0x1AFF0,0x1AFF3},{0x1AFF5,0x1AFFB},{0x1AFFD,0x1AFFE},
    {0x1B000,0x1B000},{0x1B120,0x1B122},{0x1B155,0x1B155},{0x1B164,0x1B167},
};
inline constexpr size_t Kana_total=373;


inline constexpr yuki::CInterval<char32_t> Bopo[12]={
    {0x2EA,0x2EB},{0x3001,0x3003},{0x3008,0x3011},{0x3013,0x301F},{0x302A,0x302D},{0x3030,0x3030},{0x3037,0x3037},{0x30FB,0x30FB},
    {0x3105,0x312F},{0x31A0,0x31BF},{0xFE45,0xFE46},{0xFF61,0xFF65},
};
inline constexpr size_t Bopo_total=117;


inline constexpr yuki::CInterval<char32_t> Hani[38]={
    {0x2E80,0x2E99},{0x2E9B,0x2EF3},{0x2F00,0x2FD5},{0x3001,0x3003},{0x3005,0x3011},{0x3013,0x301F},{0x3021,0x302D},{0x3030,0x3030},
    {0x3037,0x303F},{0x30FB,0x30FB},{0x3190,0x319F},{0x31C0,0x31E3},{0x3220,0x3247},{0x3280,0x32B0},{0x32C0,0x32CB},{0x32FF,0x32FF},
    {0x3358,0x3370},{0x337B,0x337F},{0x33E0,0x33FE},{0x3400,0x4DBF},{0x4E00,0x9FFF},{0xA700,0xA707},{0xF900,0xFA6D},{0xFA70,0xFAD9},
    {0xFE45,0xFE46},{0xFF61,0xFF65},{0x16FE2,0x16FE3},{0x16FF0,0x16FF1},{0x1D360,0x1D371},{0x1F250,0x1F251},{0x20000,0x2A6DF},{0x2A700,0x2B739},
    {0x2B740,0x2B81D},{0x2B820,0x2CEA1},{0x2CEB0,0x2EBE0},{0x2F800,0x2FA1D},{0x30000,0x3134A},{0x31350,0x323AF},
};
inline constexpr size_t Hani_total=98696;


inline constexpr yuki::CInterval<char32_t> Yiii[7]={
    {0x3001,0x3002},{0x3008,0x3011},{0x3014,0x301B},{0x30FB,0x30FB},{0xA000,0xA48C},{0xA490,0xA4C6},{0xFF61,0xFF65},
};
inline constexpr size_t Yiii_total=1246;


inline constexpr yuki::CInterval<char32_t> Ital[2]={
    {0x10300,0x10323},{0x1032D,0x1032F},
};
inline constexpr size_t Ital_total=39;


inline constexpr yuki::CInterval<char32_t> Goth[1]={
    {0x10330,0x1034A},
};
inline constexpr size_t Goth_total=27;


inline constexpr yuki::CInterval<char32_t> Dsrt[1]={
    {0x10400,0x1044F},
};
inline constexpr size_t Dsrt_total=80;


inline constexpr yuki::CInterval<char32_t> Zinh[29]={
    {0x300,0x36F},{0x485,0x486},{0x64B,0x655},{0x670,0x670},{0x951,0x954},{0x1AB0,0x1ACE},{0x1CD0,0x1CD2},{0x1CD4,0x1CE0},
    {0x1CE2,0x1CE8},{0x1CED,0x1CED},{0x1CF4,0x1CF4},{0x1CF8,0x1CF9},{0x1DC0,0x1DFF},{0x200C,0x200D},{0x20D0,0x20F0},{0x302A,0x302D},
    {0x3099,0x309A},{0xFE00,0xFE0F},{0xFE20,0xFE2D},{0x101FD,0x101FD},{0x102E0,0x102E0},{0x1133B,0x1133B},{0x1CF00,0x1CF2D},{0x1CF30,0x1CF46},
    {0x1D167,0x1D169},{0x1D17B,0x1D182},{0x1D185,0x1D18B},{0x1D1AA,0x1D1AD},{0xE0100,0xE01EF},
};
inline constexpr size_t Zinh_total=657;


inline constexpr yuki::CInterval<char32_t> Tglg[3]={
    {0x1700,0x1715},{0x171F,0x171F},{0x1735,0x1736},
};
inline constexpr size_t Tglg_total=25;


inline constexpr yuki::CInterval<char32_t> Hano[1]={
    {0x1720,0x1736},
};
inline constexpr size_t Hano_total=23;


inline constexpr yuki::CInterval<char32_t> Buhd[2]={
    {0x1735,0x1736},{0x1740,0x1753},
};
inline constexpr size_t Buhd_total=22;


inline constexpr yuki::CInterval<char32_t> Tagb[4]={
    {0x1735,0x1736},{0x1760,0x176C},{0x176E,0x1770},{0x1772,0x1773},
};
inline constexpr size_t Tagb_total=20;


inline constexpr yuki::CInterval<char32_t> Limb[6]={
    {0x965,0x965},{0x1900,0x191E},{0x1920,0x192B},{0x1930,0x193B},{0x1940,0x1940},{0x1944,0x194F},
};
inline constexpr size_t Limb_total=69;


inline constexpr yuki::CInterval<char32_t> Tale[3]={
    {0x1040,0x1049},{0x1950,0x196D},{0x1970,0x1974},
};
inline constexpr size_t Tale_total=45;


inline constexpr yuki::CInterval<char32_t> Linb[10]={
    {0x10000,0x1000B},{0x1000D,0x10026},{0x10028,0x1003A},{0x1003C,0x1003D},{0x1003F,0x1004D},{0x10050,0x1005D},{0x10080,0x100FA},{0x10100,0x10102},
    {0x10107,0x10133},{0x10137,0x1013F},
};
inline constexpr size_t Linb_total=268;


inline constexpr yuki::CInterval<char32_t> Ugar[2]={
    {0x10380,0x1039D},{0x1039F,0x1039F},
};
inline constexpr size_t Ugar_total=31;


inline constexpr yuki::CInterval<char32_t> Shaw[1]={
    {0x10450,0x1047F},
};
inline constexpr size_t Shaw_total=48;


inline constexpr yuki::CInterval<char32_t> Osma[2]={
    {0x10480,0x1049D},{0x104A0,0x104A9},
};
inline constexpr size_t Osma_total=40;


inline constexpr yuki::CInterval<char32_t> Cprt[9]={
    {0x10100,0x10102},{0x10107,0x10133},{0x10137,0x1013F},{0x10800,0x10805},{0x10808,0x10808},{0x1080A,0x10835},{0x10837,0x10838},{0x1083C,0x1083C},
    {0x1083F,0x1083F},
};
inline constexpr size_t Cprt_total=112;


inline constexpr yuki::CInterval<char32_t> Brai[1]={
    {0x2800,0x28FF},
};
inline constexpr size_t Brai_total=256;


inline constexpr yuki::CInterval<char32_t> Bugi[3]={
    {0x1A00,0x1A1B},{0x1A1E,0x1A1F},{0xA9CF,0xA9CF},
};
inline constexpr size_t Bugi_total=31;


inline constexpr yuki::CInterval<char32_t> Copt[4]={
    {0x3E2,0x3EF},{0x2C80,0x2CF3},{0x2CF9,0x2CFF},{0x102E0,0x102FB},
};
inline constexpr size_t Copt_total=165;


inline constexpr yuki::CInterval<char32_t> Talu[4]={
    {0x1980,0x19AB},{0x19B0,0x19C9},{0x19D0,0x19DA},{0x19DE,0x19DF},
};
inline constexpr size_t Talu_total=83;


inline constexpr yuki::CInterval<char32_t> Glag[10]={
    {0x484,0x484},{0x487,0x487},{0x2C00,0x2C5F},{0x2E43,0x2E43},{0xA66F,0xA66F},{0x1E000,0x1E006},{0x1E008,0x1E018},{0x1E01B,0x1E021},
    {0x1E023,0x1E024},{0x1E026,0x1E02A},
};
inline constexpr size_t Glag_total=138;


inline constexpr yuki::CInterval<char32_t> Tfng[3]={
    {0x2D30,0x2D67},{0x2D6F,0x2D70},{0x2D7F,0x2D7F},
};
inline constexpr size_t Tfng_total=59;


inline constexpr yuki::CInterval<char32_t> Sylo[3]={
    {0x964,0x965},{0x9E6,0x9EF},{0xA800,0xA82C},
};
inline constexpr size_t Sylo_total=57;


inline constexpr yuki::CInterval<char32_t> Xpeo[2]={
    {0x103A0,0x103C3},{0x103C8,0x103D5},
};
inline constexpr size_t Xpeo_total=50;


inline constexpr yuki::CInterval<char32_t> Khar[8]={
    {0x10A00,0x10A03},{0x10A05,0x10A06},{0x10A0C,0x10A13},{0x10A15,0x10A17},{0x10A19,0x10A35},{0x10A38,0x10A3A},{0x10A3F,0x10A48},{0x10A50,0x10A58},
};
inline constexpr size_t Khar_total=68;


inline constexpr yuki::CInterval<char32_t> Bali[2]={
    {0x1B00,0x1B4C},{0x1B50,0x1B7E},
};
inline constexpr size_t Bali_total=124;


inline constexpr yuki::CInterval<char32_t> Xsux[4]={
    {0x12000,0x12399},{0x12400,0x1246E},{0x12470,0x12474},{0x12480,0x12543},
};
inline constexpr size_t Xsux_total=1234;


inline constexpr yuki::CInterval<char32_t> Phnx[2]={
    {0x10900,0x1091B},{0x1091F,0x1091F},
};
inline constexpr size_t Phnx_total=29;


inline constexpr yuki::CInterval<char32_t> Phag[3]={
    {0x1802,0x1803},{0x1805,0x1805},{0xA840,0xA877},
};
inline constexpr size_t Phag_total=59;


inline constexpr yuki::CInterval<char32_t> Nkoo[6]={
    {0x60C,0x60C},{0x61B,0x61B},{0x61F,0x61F},{0x7C0,0x7FA},{0x7FD,0x7FF},{0xFD3E,0xFD3F},
};
inline constexpr size_t Nkoo_total=67;


inline constexpr yuki::CInterval<char32_t> Sund[2]={
    {0x1B80,0x1BBF},{0x1CC0,0x1CC7},
};
inline constexpr size_t Sund_total=72;


inline constexpr yuki::CInterval<char32_t> Lepc[3]={
    {0x1C00,0x1C37},{0x1C3B,0x1C49},{0x1C4D,0x1C4F},
};
inline constexpr size_t Lepc_total=74;


inline constexpr yuki::CInterval<char32_t> Olck[1]={
    {0x1C50,0x1C7F},
};
inline constexpr size_t Olck_total=48;


inline constexpr yuki::CInterval<char32_t> Vaii[1]={
    {0xA500,0xA62B},
};
inline constexpr size_t Vaii_total=300;


inline constexpr yuki::CInterval<char32_t> Saur[2]={
    {0xA880,0xA8C5},{0xA8CE,0xA8D9},
};
inline constexpr size_t Saur_total=82;


inline constexpr yuki::CInterval<char32_t> Kali[1]={
    {0xA900,0xA92F},
};
inline constexpr size_t Kali_total=48;


inline constexpr yuki::CInterval<char32_t> Rjng[2]={
    {0xA930,0xA953},{0xA95F,0xA95F},
};
inline constexpr size_t Rjng_total=37;


inline constexpr yuki::CInterval<char32_t> Lyci[1]={
    {0x10280,0x1029C},
};
inline constexpr size_t Lyci_total=29;


inline constexpr yuki::CInterval<char32_t> Cari[1]={
    {0x102A0,0x102D0},
};
inline constexpr size_t Cari_total=49;


inline constexpr yuki::CInterval<char32_t> Lydi[2]={
    {0x10920,0x10939},{0x1093F,0x1093F},
};
inline constexpr size_t Lydi_total=27;


inline constexpr yuki::CInterval<char32_t> Cham_sc[4]={
    {0xAA00,0xAA36},{0xAA40,0xAA4D},{0xAA50,0xAA59},{0xAA5C,0xAA5F},
};
inline constexpr size_t Cham_sc_total=83;


inline constexpr yuki::CInterval<char32_t> Lana[5]={
    {0x1A20,0x1A5E},{0x1A60,0x1A7C},{0x1A7F,0x1A89},{0x1A90,0x1A99},{0x1AA0,0x1AAD},
};
inline constexpr size_t Lana_total=127;


inline constexpr yuki::CInterval<char32_t> Tavt[2]={
    {0xAA80,0xAAC2},{0xAADB,0xAADF},
};
inline constexpr size_t Tavt_total=72;


inline constexpr yuki::CInterval<char32_t> Avst[2]={
    {0x10B00,0x10B35},{0x10B39,0x10B3F},
};
inline constexpr size_t Avst_total=61;


inline constexpr yuki::CInterval<char32_t> Egyp[1]={
    {0x13000,0x13455},
};
inline constexpr size_t Egyp_total=1110;


inline constexpr yuki::CInterval<char32_t> Samr[2]={
    {0x800,0x82D},{0x830,0x83E},
};
inline constexpr size_t Samr_total=61;


inline constexpr yuki::CInterval<char32_t> Lisu_sc[2]={
    {0xA4D0,0xA4FF},{0x11FB0,0x11FB0},
};
inline constexpr size_t Lisu_sc_total=49;


inline constexpr yuki::CInterval<char32_t> Bamu[2]={
    {0xA6A0,0xA6F7},{0x16800,0x16A38},
};
inline constexpr size_t Bamu_total=657;


inline constexpr yuki::CInterval<char32_t> Java[3]={
    {0xA980,0xA9CD},{0xA9CF,0xA9D9},{0xA9DE,0xA9DF},
};
inline constexpr size_t Java_total=91;


inline constexpr yuki::CInterval<char32_t> Mtei[3]={
    {0xAAE0,0xAAF6},{0xABC0,0xABED},{0xABF0,0xABF9},
};
inline constexpr size_t Mtei_total=79;


inline constexpr yuki::CInterval<char32_t> Armi[2]={
    {0x10840,0x10855},{0x10857,0x1085F},
};
inline constexpr size_t Armi_total=31;


inline constexpr yuki::CInterval<char32_t> Sarb[1]={
    {0x10A60,0x10A7F},
};
inline constexpr size_t Sarb_total=32;


inline constexpr yuki::CInterval<char32_t> Prti[2]={
    {0x10B40,0x10B55},{0x10B58,0x10B5F},
};
inline constexpr size_t Prti_total=30;


inline constexpr yuki::CInterval<char32_t> Phli[2]={
    {0x10B60,0x10B72},{0x10B78,0x10B7F},
};
inline constexpr size_t Phli_total=27;


inline constexpr yuki::CInterval<char32_t> Orkh[1]={
    {0x10C00,0x10C48},
};
inline constexpr size_t Orkh_total=73;


inline constexpr yuki::CInterval<char32_t> Kthi[4]={
    {0x966,0x96F},{0xA830,0xA839},{0x11080,0x110C2},{0x110CD,0x110CD},
};
inline constexpr size_t Kthi_total=88;


inline constexpr yuki::CInterval<char32_t> Batk[2]={
    {0x1BC0,0x1BF3},{0x1BFC,0x1BFF},
};
inline constexpr size_t Batk_total=56;


inline constexpr yuki::CInterval<char32_t> Brah[3]={
    {0x11000,0x1104D},{0x11052,0x11075},{0x1107F,0x1107F},
};
inline constexpr size_t Brah_total=115;


inline constexpr yuki::CInterval<char32_t> Mand[3]={
    {0x640,0x640},{0x840,0x85B},{0x85E,0x85E},
};
inline constexpr size_t Mand_total=30;


inline constexpr yuki::CInterval<char32_t> Cakm[4]={
    {0x9E6,0x9EF},{0x1040,0x1049},{0x11100,0x11134},{0x11136,0x11147},
};
inline constexpr size_t Cakm_total=91;


inline constexpr yuki::CInterval<char32_t> Merc[3]={
    {0x109A0,0x109B7},{0x109BC,0x109CF},{0x109D2,0x109FF},
};
inline constexpr size_t Merc_total=90;


inline constexpr yuki::CInterval<char32_t> Mero[1]={
    {0x10980,0x1099F},
};
inline constexpr size_t Mero_total=32;


inline constexpr yuki::CInterval<char32_t> Plrd[3]={
    {0x16F00,0x16F4A},{0x16F4F,0x16F87},{0x16F8F,0x16F9F},
};
inline constexpr size_t Plrd_total=149;


inline constexpr yuki::CInterval<char32_t> Shrd[6]={
    {0x951,0x951},{0x1CD7,0x1CD7},{0x1CD9,0x1CD9},{0x1CDC,0x1CDD},{0x1CE0,0x1CE0},{0x11180,0x111DF},
};
inline constexpr size_t Shrd_total=102;


inline constexpr yuki::CInterval<char32_t> Sora[2]={
    {0x110D0,0x110E8},{0x110F0,0x110F9},
};
inline constexpr size_t Sora_total=35;


inline constexpr yuki::CInterval<char32_t> Takr[4]={
    {0x964,0x965},{0xA830,0xA839},{0x11680,0x116B9},{0x116C0,0x116C9},
};
inline constexpr size_t Takr_total=80;


inline constexpr yuki::CInterval<char32_t> Aghb[2]={
    {0x10530,0x10563},{0x1056F,0x1056F},
};
inline constexpr size_t Aghb_total=53;


inline constexpr yuki::CInterval<char32_t> Bass[2]={
    {0x16AD0,0x16AED},{0x16AF0,0x16AF5},
};
inline constexpr size_t Bass_total=36;


inline constexpr yuki::CInterval<char32_t> Dupl[5]={
    {0x1BC00,0x1BC6A},{0x1BC70,0x1BC7C},{0x1BC80,0x1BC88},{0x1BC90,0x1BC99},{0x1BC9C,0x1BCA3},
};
inline constexpr size_t Dupl_total=147;


inline constexpr yuki::CInterval<char32_t> Elba[1]={
    {0x10500,0x10527},
};
inline constexpr size_t Elba_total=40;


inline constexpr yuki::CInterval<char32_t> Gran[25]={
    {0x951,0x952},{0x964,0x965},{0xBE6,0xBF3},{0x1CD0,0x1CD0},{0x1CD2,0x1CD3},{0x1CF2,0x1CF4},{0x1CF8,0x1CF9},{0x20F0,0x20F0},
    {0x11300,0x11303},{0x11305,0x1130C},{0x1130F,0x11310},{0x11313,0x11328},{0x1132A,0x11330},{0x11332,0x11333},{0x11335,0x11339},{0x1133B,0x11344},
    {0x11347,0x11348},{0x1134B,0x1134D},{0x11350,0x11350},{0x11357,0x11357},{0x1135D,0x11363},{0x11366,0x1136C},{0x11370,0x11374},{0x11FD0,0x11FD1},
    {0x11FD3,0x11FD3},
};
inline constexpr size_t Gran_total=119;


inline constexpr yuki::CInterval<char32_t> Hmng[5]={
    {0x16B00,0x16B45},{0x16B50,0x16B59},{0x16B5B,0x16B61},{0x16B63,0x16B77},{0x16B7D,0x16B8F},
};
inline constexpr size_t Hmng_total=127;


inline constexpr yuki::CInterval<char32_t> Khoj[4]={
    {0xAE6,0xAEF},{0xA830,0xA839},{0x11200,0x11211},{0x11213,0x11241},
};
inline constexpr size_t Khoj_total=85;


inline constexpr yuki::CInterval<char32_t> Lina[4]={
    {0x10107,0x10133},{0x10600,0x10736},{0x10740,0x10755},{0x10760,0x10767},
};
inline constexpr size_t Lina_total=386;


inline constexpr yuki::CInterval<char32_t> Mahj[3]={
    {0x964,0x96F},{0xA830,0xA839},{0x11150,0x11176},
};
inline constexpr size_t Mahj_total=61;


inline constexpr yuki::CInterval<char32_t> Mani[3]={
    {0x640,0x640},{0x10AC0,0x10AE6},{0x10AEB,0x10AF6},
};
inline constexpr size_t Mani_total=53;


inline constexpr yuki::CInterval<char32_t> Mend[2]={
    {0x1E800,0x1E8C4},{0x1E8C7,0x1E8D6},
};
inline constexpr size_t Mend_total=213;


inline constexpr yuki::CInterval<char32_t> Modi_sc[3]={
    {0xA830,0xA839},{0x11600,0x11644},{0x11650,0x11659},
};
inline constexpr size_t Modi_sc_total=89;


inline constexpr yuki::CInterval<char32_t> Mroo[3]={
    {0x16A40,0x16A5E},{0x16A60,0x16A69},{0x16A6E,0x16A6F},
};
inline constexpr size_t Mroo_total=43;


inline constexpr yuki::CInterval<char32_t> Narb[1]={
    {0x10A80,0x10A9F},
};
inline constexpr size_t Narb_total=32;


inline constexpr yuki::CInterval<char32_t> Nbat[2]={
    {0x10880,0x1089E},{0x108A7,0x108AF},
};
inline constexpr size_t Nbat_total=40;


inline constexpr yuki::CInterval<char32_t> Palm[1]={
    {0x10860,0x1087F},
};
inline constexpr size_t Palm_total=32;


inline constexpr yuki::CInterval<char32_t> Pauc[1]={
    {0x11AC0,0x11AF8},
};
inline constexpr size_t Pauc_total=57;


inline constexpr yuki::CInterval<char32_t> Perm[2]={
    {0x483,0x483},{0x10350,0x1037A},
};
inline constexpr size_t Perm_total=44;


inline constexpr yuki::CInterval<char32_t> Phlp[4]={
    {0x640,0x640},{0x10B80,0x10B91},{0x10B99,0x10B9C},{0x10BA9,0x10BAF},
};
inline constexpr size_t Phlp_total=30;


inline constexpr yuki::CInterval<char32_t> Sidd[2]={
    {0x11580,0x115B5},{0x115B8,0x115DD},
};
inline constexpr size_t Sidd_total=92;


inline constexpr yuki::CInterval<char32_t> Sind[4]={
    {0x964,0x965},{0xA830,0xA839},{0x112B0,0x112EA},{0x112F0,0x112F9},
};
inline constexpr size_t Sind_total=81;


inline constexpr yuki::CInterval<char32_t> Tirh[6]={
    {0x951,0x952},{0x964,0x965},{0x1CF2,0x1CF2},{0xA830,0xA839},{0x11480,0x114C7},{0x114D0,0x114D9},
};
inline constexpr size_t Tirh_total=97;


inline constexpr yuki::CInterval<char32_t> Wara[2]={
    {0x118A0,0x118F2},{0x118FF,0x118FF},
};
inline constexpr size_t Wara_total=84;


inline constexpr yuki::CInterval<char32_t> Ahom_sc[3]={
    {0x11700,0x1171A},{0x1171D,0x1172B},{0x11730,0x11746},
};
inline constexpr size_t Ahom_sc_total=65;


inline constexpr yuki::CInterval<char32_t> Hluw[1]={
    {0x14400,0x14646},
};
inline constexpr size_t Hluw_total=583;


inline constexpr yuki::CInterval<char32_t> Hatr[3]={
    {0x108E0,0x108F2},{0x108F4,0x108F5},{0x108FB,0x108FF},
};
inline constexpr size_t Hatr_total=26;


inline constexpr yuki::CInterval<char32_t> Mult[6]={
    {0xA66,0xA6F},{0x11280,0x11286},{0x11288,0x11288},{0x1128A,0x1128D},{0x1128F,0x1129D},{0x1129F,0x112A9},
};
inline constexpr size_t Mult_total=48;


inline constexpr yuki::CInterval<char32_t> Hung[3]={
    {0x10C80,0x10CB2},{0x10CC0,0x10CF2},{0x10CFA,0x10CFF},
};
inline constexpr size_t Hung_total=108;


inline constexpr yuki::CInterval<char32_t> Sgnw[3]={
    {0x1D800,0x1DA8B},{0x1DA9B,0x1DA9F},{0x1DAA1,0x1DAAF},
};
inline constexpr size_t Sgnw_total=672;


inline constexpr yuki::CInterval<char32_t> Adlm[5]={
    {0x61F,0x61F},{0x640,0x640},{0x1E900,0x1E94B},{0x1E950,0x1E959},{0x1E95E,0x1E95F},
};
inline constexpr size_t Adlm_total=90;


inline constexpr yuki::CInterval<char32_t> Bhks[4]={
    {0x11C00,0x11C08},{0x11C0A,0x11C36},{0x11C38,0x11C45},{0x11C50,0x11C6C},
};
inline constexpr size_t Bhks_total=97;


inline constexpr yuki::CInterval<char32_t> Marc[3]={
    {0x11C70,0x11C8F},{0x11C92,0x11CA7},{0x11CA9,0x11CB6},
};
inline constexpr size_t Marc_total=68;


inline constexpr yuki::CInterval<char32_t> Newa_sc[2]={
    {0x11400,0x1145B},{0x1145D,0x11461},
};
inline constexpr size_t Newa_sc_total=97;


inline constexpr yuki::CInterval<char32_t> Osge[2]={
    {0x104B0,0x104D3},{0x104D8,0x104FB},
};
inline constexpr size_t Osge_total=72;


inline constexpr yuki::CInterval<char32_t> Tang[4]={
    {0x16FE0,0x16FE0},{0x17000,0x187F7},{0x18800,0x18AFF},{0x18D00,0x18D08},
};
inline constexpr size_t Tang_total=6914;


inline constexpr yuki::CInterval<char32_t> Gonm[8]={
    {0x964,0x965},{0x11D00,0x11D06},{0x11D08,0x11D09},{0x11D0B,0x11D36},{0x11D3A,0x11D3A},{0x11D3C,0x11D3D},{0x11D3F,0x11D47},{0x11D50,0x11D59},
};
inline constexpr size_t Gonm_total=77;


inline constexpr yuki::CInterval<char32_t> Nshu[2]={
    {0x16FE1,0x16FE1},{0x1B170,0x1B2FB},
};
inline constexpr size_t Nshu_total=397;


inline constexpr yuki::CInterval<char32_t> Soyo[1]={
    {0x11A50,0x11AA2},
};
inline constexpr size_t Soyo_total=83;


inline constexpr yuki::CInterval<char32_t> Zanb[1]={
    {0x11A00,0x11A47},
};
inline constexpr size_t Zanb_total=72;


inline constexpr yuki::CInterval<char32_t> Dogr[3]={
    {0x964,0x96F},{0xA830,0xA839},{0x11800,0x1183B},
};
inline constexpr size_t Dogr_total=82;


inline constexpr yuki::CInterval<char32_t> Gong[7]={
    {0x964,0x965},{0x11D60,0x11D65},{0x11D67,0x11D68},{0x11D6A,0x11D8E},{0x11D90,0x11D91},{0x11D93,0x11D98},{0x11DA0,0x11DA9},
};
inline constexpr size_t Gong_total=65;


inline constexpr yuki::CInterval<char32_t> Maka[1]={
    {0x11EE0,0x11EF8},
};
inline constexpr size_t Maka_total=25;


inline constexpr yuki::CInterval<char32_t> Medf[1]={
    {0x16E40,0x16E9A},
};
inline constexpr size_t Medf_total=91;


inline constexpr yuki::CInterval<char32_t> Rohg[7]={
    {0x60C,0x60C},{0x61B,0x61B},{0x61F,0x61F},{0x640,0x640},{0x6D4,0x6D4},{0x10D00,0x10D27},{0x10D30,0x10D39},
};
inline constexpr size_t Rohg_total=55;


inline constexpr yuki::CInterval<char32_t> Sogd[2]={
    {0x640,0x640},{0x10F30,0x10F59},
};
inline constexpr size_t Sogd_total=43;


inline constexpr yuki::CInterval<char32_t> Sogo[1]={
    {0x10F00,0x10F27},
};
inline constexpr size_t Sogo_total=40;


inline constexpr yuki::CInterval<char32_t> Elym[1]={
    {0x10FE0,0x10FF6},
};
inline constexpr size_t Elym_total=23;


inline constexpr yuki::CInterval<char32_t> Nand[9]={
    {0x964,0x965},{0xCE6,0xCEF},{0x1CE9,0x1CE9},{0x1CF2,0x1CF2},{0x1CFA,0x1CFA},{0xA830,0xA835},{0x119A0,0x119A7},{0x119AA,0x119D7},
    {0x119DA,0x119E4},
};
inline constexpr size_t Nand_total=86;


inline constexpr yuki::CInterval<char32_t> Hmnp[4]={
    {0x1E100,0x1E12C},{0x1E130,0x1E13D},{0x1E140,0x1E149},{0x1E14E,0x1E14F},
};
inline constexpr size_t Hmnp_total=71;


inline constexpr yuki::CInterval<char32_t> Wcho[2]={
    {0x1E2C0,0x1E2F9},{0x1E2FF,0x1E2FF},
};
inline constexpr size_t Wcho_total=59;


inline constexpr yuki::CInterval<char32_t> Chrs[1]={
    {0x10FB0,0x10FCB},
};
inline constexpr size_t Chrs_total=28;


inline constexpr yuki::CInterval<char32_t> Diak[8]={
    {0x11900,0x11906},{0x11909,0x11909},{0x1190C,0x11913},{0x11915,0x11916},{0x11918,0x11935},{0x11937,0x11938},{0x1193B,0x11946},{0x11950,0x11959},
};
inline constexpr size_t Diak_total=72;


inline constexpr yuki::CInterval<char32_t> Kits[2]={
    {0x16FE4,0x16FE4},{0x18B00,0x18CD5},
};
inline constexpr size_t Kits_total=471;


inline constexpr yuki::CInterval<char32_t> Yezi[7]={
    {0x60C,0x60C},{0x61B,0x61B},{0x61F,0x61F},{0x660,0x669},{0x10E80,0x10EA9},{0x10EAB,0x10EAD},{0x10EB0,0x10EB1},
};
inline constexpr size_t Yezi_total=60;


inline constexpr yuki::CInterval<char32_t> Cpmn[2]={
    {0x10100,0x10101},{0x12F90,0x12FF2},
};
inline constexpr size_t Cpmn_total=101;


inline constexpr yuki::CInterval<char32_t> Ougr[3]={
    {0x640,0x640},{0x10AF2,0x10AF2},{0x10F70,0x10F89},
};
inline constexpr size_t Ougr_total=28;


inline constexpr yuki::CInterval<char32_t> Tnsa[2]={
    {0x16A70,0x16ABE},{0x16AC0,0x16AC9},
};
inline constexpr size_t Tnsa_total=89;


inline constexpr yuki::CInterval<char32_t> Toto_sc[1]={
    {0x1E290,0x1E2AE},
};
inline constexpr size_t Toto_sc_total=31;


inline constexpr yuki::CInterval<char32_t> Vith[8]={
    {0x10570,0x1057A},{0x1057C,0x1058A},{0x1058C,0x10592},{0x10594,0x10595},{0x10597,0x105A1},{0x105A3,0x105B1},{0x105B3,0x105B9},{0x105BB,0x105BC},
};
inline constexpr size_t Vith_total=70;


inline constexpr yuki::CInterval<char32_t> Kawi_sc[3]={
    {0x11F00,0x11F10},{0x11F12,0x11F3A},{0x11F3E,0x11F59},
};
inline constexpr size_t Kawi_sc_total=86;


inline constexpr yuki::CInterval<char32_t> Nagm[1]={
    {0x1E4D0,0x1E4F9},
};
inline constexpr size_t Nagm_total=42;


extern const yuki::CInterval<char32_t> Zzzz[705];
inline constexpr size_t Zzzz_total=964861;


enum struct Script : unsigned char {
    Zzzz,Adlm, Aghb, Ahom, Arab, Armi, Armn, Avst, Bali, Bamu, Bass, Batk, Beng, Bhks, Bopo, Brah,
    Brai, Bugi, Buhd, Cakm, Cans, Cari, Cham, Cher, Chrs, Copt, Cpmn, Cprt, Cyrl, Deva, Diak, Dogr,
    Dsrt, Dupl, Egyp, Elba, Elym, Ethi, Geor, Glag, Gong, Gonm, Goth, Gran, Grek, Gujr, Guru, Hang,
    Hani, Hano, Hatr, Hebr, Hira, Hluw, Hmng, Hmnp, Hung, Ital, Java, Kali, Kana, Kawi, Khar, Khmr,
    Khoj, Kits, Knda, Kthi, Lana, Laoo, Latn, Lepc, Limb, Lina, Linb, Lisu, Lyci, Lydi, Mahj, Maka,
    Mand, Mani, Marc, Medf, Mend, Merc, Mero, Mlym, Modi, Mong, Mroo, Mtei, Mult, Mymr, Nagm, Nand,
    Narb, Nbat, Newa, Nkoo, Nshu, Ogam, Olck, Orkh, Orya, Osge, Osma, Ougr, Palm, Pauc, Perm, Phag,
    Phli, Phlp, Phnx, Plrd, Prti, Rjng, Rohg, Runr, Samr, Sarb, Saur, Sgnw, Shaw, Shrd, Sidd, Sind,
    Sinh, Sogd, Sogo, Sora, Soyo, Sund, Sylo, Syrc, Tagb, Takr, Tale, Talu, Taml, Tang, Tavt, Telu,
    Tfng, Tglg, Thaa, Thai, Tibt, Tirh, Tnsa, Toto, Ugar, Vaii, Vith, Wara, Wcho, Xpeo, Xsux, Yezi,
    Yiii, Zanb, Zinh, Zyyy, total_
}; // enum struct Script


inline constexpr Name_CC_Num<Script> script_table[164]={
    {"Zzzz",Zzzz,0},{"Adlm",Adlm,1},{"Aghb",Aghb,2},{"Ahom_sc",Ahom_sc,3},{"Arab",Arab,4},{"Armi",Armi,5},{"Armn",Armn,6},{"Avst",Avst,7},
    {"Bali",Bali,8},{"Bamu",Bamu,9},{"Bass",Bass,10},{"Batk",Batk,11},{"Beng",Beng,12},{"Bhks",Bhks,13},{"Bopo",Bopo,14},{"Brah",Brah,15},
    {"Brai",Brai,16},{"Bugi",Bugi,17},{"Buhd",Buhd,18},{"Cakm",Cakm,19},{"Cans",Cans,20},{"Cari",Cari,21},{"Cham_sc",Cham_sc,22},{"Cher",Cher,23},
    {"Chrs",Chrs,24},{"Copt",Copt,25},{"Cpmn",Cpmn,26},{"Cprt",Cprt,27},{"Cyrl",Cyrl,28},{"Deva",Deva,29},{"Diak",Diak,30},{"Dogr",Dogr,31},
    {"Dsrt",Dsrt,32},{"Dupl",Dupl,33},{"Egyp",Egyp,34},{"Elba",Elba,35},{"Elym",Elym,36},{"Ethi",Ethi,37},{"Geor",Geor,38},{"Glag",Glag,39},
    {"Gong",Gong,40},{"Gonm",Gonm,41},{"Goth",Goth,42},{"Gran",Gran,43},{"Grek",Grek,44},{"Gujr",Gujr,45},{"Guru",Guru,46},{"Hang",Hang,47},
    {"Hani",Hani,48},{"Hano",Hano,49},{"Hatr",Hatr,50},{"Hebr",Hebr,51},{"Hira",Hira,52},{"Hluw",Hluw,53},{"Hmng",Hmng,54},{"Hmnp",Hmnp,55},
    {"Hung",Hung,56},{"Ital",Ital,57},{"Java",Java,58},{"Kali",Kali,59},{"Kana",Kana,60},{"Kawi_sc",Kawi_sc,61},{"Khar",Khar,62},{"Khmr",Khmr,63},
    {"Khoj",Khoj,64},{"Kits",Kits,65},{"Knda",Knda,66},{"Kthi",Kthi,67},{"Lana",Lana,68},{"Laoo",Laoo,69},{"Latn",Latn,70},{"Lepc",Lepc,71},
    {"Limb",Limb,72},{"Lina",Lina,73},{"Linb",Linb,74},{"Lisu_sc",Lisu_sc,75},{"Lyci",Lyci,76},{"Lydi",Lydi,77},{"Mahj",Mahj,78},{"Maka",Maka,79},
    {"Mand",Mand,80},{"Mani",Mani,81},{"Marc",Marc,82},{"Medf",Medf,83},{"Mend",Mend,84},{"Merc",Merc,85},{"Mero",Mero,86},{"Mlym",Mlym,87},
    {"Modi_sc",Modi_sc,88},{"Mong",Mong,89},{"Mroo",Mroo,90},{"Mtei",Mtei,91},{"Mult",Mult,92},{"Mymr",Mymr,93},{"Nagm",Nagm,94},{"Nand",Nand,95},
    {"Narb",Narb,96},{"Nbat",Nbat,97},{"Newa_sc",Newa_sc,98},{"Nkoo",Nkoo,99},{"Nshu",Nshu,100},{"Ogam",Ogam,101},{"Olck",Olck,102},{"Orkh",Orkh,103},
    {"Orya",Orya,104},{"Osge",Osge,105},{"Osma",Osma,106},{"Ougr",Ougr,107},{"Palm",Palm,108},{"Pauc",Pauc,109},{"Perm",Perm,110},{"Phag",Phag,111},
    {"Phli",Phli,112},{"Phlp",Phlp,113},{"Phnx",Phnx,114},{"Plrd",Plrd,115},{"Prti",Prti,116},{"Rjng",Rjng,117},{"Rohg",Rohg,118},{"Runr",Runr,119},
    {"Samr",Samr,120},{"Sarb",Sarb,121},{"Saur",Saur,122},{"Sgnw",Sgnw,123},{"Shaw",Shaw,124},{"Shrd",Shrd,125},{"Sidd",Sidd,126},{"Sind",Sind,127},
    {"Sinh",Sinh,128},{"Sogd",Sogd,129},{"Sogo",Sogo,130},{"Sora",Sora,131},{"Soyo",Soyo,132},{"Sund",Sund,133},{"Sylo",Sylo,134},{"Syrc",Syrc,135},
    {"Tagb",Tagb,136},{"Takr",Takr,137},{"Tale",Tale,138},{"Talu",Talu,139},{"Taml",Taml,140},{"Tang",Tang,141},{"Tavt",Tavt,142},{"Telu",Telu,143},
    {"Tfng",Tfng,144},{"Tglg",Tglg,145},{"Thaa",Thaa,146},{"Thai_sc",Thai_sc,147},{"Tibt",Tibt,148},{"Tirh",Tirh,149},{"Tnsa",Tnsa,150},{"Toto_sc",Toto_sc,151},
    {"Ugar",Ugar,152},{"Vaii",Vaii,153},{"Vith",Vith,154},{"Wara",Wara,155},{"Wcho",Wcho,156},{"Xpeo",Xpeo,157},{"Xsux",Xsux,158},{"Yezi",Yezi,159},
    {"Yiii",Yiii,160},{"Zanb",Zanb,161},{"Zinh",Zinh,162},{"Zyyy",Zyyy,163},
};


extern const unsigned char script_explicit[205744];

inline Script script(const char32_t c){
    assert(c<0x110000);
    if(yuki::contained_in_cintervals(Zyyy,Zyyy+sizeof(Zyyy)/sizeof(Zyyy[0]),c))
        return Script::Zyyy;
    else if(yuki::contained_in_cintervals(Zinh,Zinh+sizeof(Zinh)/sizeof(Zinh[0]),c))
        return Script::Zinh;
    else if(yuki::contained_in_cintervals(Zzzz,Zzzz+sizeof(Zzzz)/sizeof(Zzzz[0]),c))
        return Script::Zzzz;
    else
        return static_cast<Script>(script_explicit[c]);
}


typedef Basic_ScriptExt<Script,21> ScriptExt;

ScriptExt script_ext(const char32_t);


} // namespace yuki::unicode
